<?php
/**
* Border style view helper, generates the border styling for each of the 
* template divs
* 
* @todo The code currently doesn't group the style attributes for edge borders, 
* if all four edges have the same border this view helper currently adds four 
* style definitions, no just the one that is needed.
* 
* @author Dean Blackborough <dean@g3d-development.com>
* @copyright G3D Development Limited
* @version $Id: TemplateStylesBorders.php 1685 2014-03-16 20:48:23Z Dean.Blackborough $
*/
class Dlayer_View_TemplateStylesBorders extends Zend_View_Helper_Abstract 
{
    /**
    * Override the hinting for the view property so that we can see the view 
    * helpers that have been defined
    * 
    * @var Dlayer_View_Codehinting
    */
    public $view;
    
    /**
    * Style attributes data array for all the divs in the template array.
    * 
    * @var array
    */
    private $styles = array();
    
    /**
    * The Id for the current div
    * 
    * @var integer
    */
    private $id;
    
    /** 
    * Border style view helper, generates the border styling for each of the 
    * template divs
    * 
    * @return Dlayer_View_TemplateStylesBorders
    */
    public function templateStylesBorders() 
    {
        return $this;
    }
    
    /**
    * Reset any internal params, need to reset the params in case the view 
    * helper is called multiple times within the same view.
    * 
    * The styles data array is not reset, the array contains data for all the 
    * divs in the template, it would make no sense to clear it, needed for 
    * additional calls
    * 
    * @return void
    */
    private function resetParams() 
    {
        $this->id = NULL;
    }
    
    /**
    * Pass in the data for the current div, at the moment all we need is the 
    * id of the div we are checking the style array for
    * 
    * @param integer $id Id of the current div
    * @return Dlayer_View_TemplateStylesBorders
    */
    public function div($id) 
    {
        $this->resetParams();
        
        $this->id = $id;

        return $this;
    }
    
    /**
    * Set the template styles data array. This array contains the style 
    * definitions for the entire template array, rather than passing it in 
    * multiple times it only needs to be defined once.
    * 
    * @param array $styles
    * @return Dlayer_View_TemplateStylesBorders
    */
    public function setStyles(array $styles)
    {
        $this->styles = $styles;
        
        return $this;
    }
    
    /**
    * Render method, this is the base worker method for the view helper, it 
    * generates the html, in this case the border attributes for the current 
    * div
    * 
    * @return string The generated html
    */
    private function render() 
    {
        $html = '';
        
        if(array_key_exists($this->id, $this->styles)) {           
            foreach($this->styles[$this->id] as $style) {
                $html .= ' border-' . $this->view->escape($style['position']) . 
                ': ' . $this->view->escape($style['width'] . 'px ' . 
                $style['style'] . ' ' . $style['color_hex']) . ';';
            }
        }
        
        return $html;
    }
    
    /**
    * The view helpers can be output directly, no need to call and return the 
    * render method, we define the __toString method so that echo and print 
    * calls on the object return the html generated by the render method
    * 
    * @return string The html generated by the render method
    */
    public function __toString() 
    {
        return $this->render();
    }
}