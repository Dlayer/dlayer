<?php
/**
* Generates a bootstrap label html fragment, class and label text can be 
* defined
* 
* @author Dean Blackborough <dean@g3d-development.com>
* @copyright G3D Development Limited
*/
class Dlayer_View_BootstrapLabel extends Zend_View_Helper_Abstract 
{
	/**
	* Override the hinting for the view property so that we can see the view
	* helpers that have been defined
	*
	* @var Dlayer_View_Codehinting
	*/
	public $view;
	
	private $class; 
	private $text;
	
	/**
	* Generates a bootstrap label html fragment, class and label text can be 
	* defined
	* 
	* @param string $text Text for the label
	* @param string $class Bootstrap class for label
	* @return Dlayer_View_BootstrapLabel
	*/
	public function bootstrapLabel($text, $class='default') 
	{
		$this->resetParams();
		
		$this->text = $text;
		$this->class = $class;
		
		return $this;
	}
	
	/**
	* Reset any internal params, we need to reset the params in case the view 
	* helper is called multiple times within the same view script.
	* 
	* @return void
	*/
	public function resetParams() 
	{
		$this->text = '';
		$this->class = 'default';
	}
	
	/**
	* Generate the further reading html 
	* 
	* @return string 
	*/
	private function render() 
	{
		$html = '<span class="label label-' . 
			$this->view->escape($this->class) . '">' . 
			$this->view->escape($this->text) . '</span>';
				
		return $html;
	}
	
	/**
	* The view helpers can be output directly, we define the __toString m
	* method so that echo and print calls on the object return the html 
	* generated by the render method
	* 
	* @return string The generated html
	*/
	public function __toString() 
	{
		return $this->render();
	}
}