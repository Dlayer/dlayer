<?php
/**
* Background colour styles view helper, generates the string for the background 
* colour style attribute
* 
* @author Dean Blackborough <dean@g3d-development.com>
* @copyright G3D Development Limited
*/
class Dlayer_View_StylesBackgroundColor extends Zend_View_Helper_Abstract 
{
	/**
	* Override the hinting for the view property so that we can see the view 
	* helpers that have been defined
	* 
	* @var Dlayer_View_Codehinting
	*/
	public $view;
	
	/**
	* Background colour hex
	* 
	* @var string
	*/
	private $color_hex = NULL;
	
	/**
	* Partial style string
	* 
	* @var string
	*/
	private $html = '';
	
	/** 
	* Background colour styles view helper, generates the string for the 
	* background colour style attribute
	* 
	* @param string $color_hex
	* @return Dlayer_View_StylesBackgroundColor
	*/
	public function stylesBackgroundColor($color_hex) 
	{
		$this->resetParams();
		
		$this->color_hex = $color_hex;
		
		return $this;
	}
	
	/**
	* Reset any internal params, we need to reset the internal params in case 
	* the view helper is called multiple times within the same script.
	* 
	* @return void
	*/
	private function resetParams() 
	{
		$this->color_hex = NULL;
		$this->html = '';
	}
	
	/**
	* Render method, this is the worker method the for view helper, it 
	* generates the style fragment and passes it back to the base styles view 
	* helper
	* 
	* @return string The generated html
	*/
	private function render() 
	{       
		if($this->color_hex != NULL) {
			$this->html .= ' background-color: ' . $this->color_hex . ';';
		}
		
		return $this->html;
	}
	
	/**
	* This view helper can be ouput directly using print and echo, there is no 
	* need to call the render method. The __toString method is defined to allow 
	* this functionality, all it does it call the render method
	* 
	* @return string The html generated by the render method
	*/
	public function __toString() 
	{
		return $this->render();
	}
}