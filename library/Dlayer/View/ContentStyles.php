<?php
/**
* Content styles view helper, generates the additional style attributes for a 
* content item, data defined using tool styling tab. 
* 
* There is a view helper for each styling group this view helper calls them 
* all and returns the final style string
* 
* @author Dean Blackborough <dean@g3d-development.com>
* @copyright G3D Development Limited
* @version $Id: ContentStyles.php 1774 2014-04-30 16:17:34Z Dean.Blackborough $
*/
class Dlayer_View_ContentStyles extends Zend_View_Helper_Abstract 
{
    /**
    * Override the hinting for the view property so that we can see the view 
    * helpers that have been defined
    * 
    * @var Dlayer_View_Codehinting
    */
    public $view;

    /**
    * The Id for the current content item
    * 
    * @var integer
    */
    private $id; 
    
    /**
    * Additional styles data array for the page content items, contains all the 
    * aditional style attributes define via the styling tab
    */
    private $additional_styles;
    
    /** 
    * Content styles view helper, generates the additional style attributes 
    * for a content item, data defined using tool styling tab. 
	* 
	* There is a view helper for each styling group this view helper calls 
	* them all and returns the final style string
    * 
    * @return Dlayer_View_ContentStyles
    */
    public function contentStyles() 
    {
        return $this;
    }
    
    /**
    * Reset any internal params, need to reset the params in case the view 
    * helper is called multiple times within the same view.
    * 
    * The additional styles data arrays is not reset as it contains data for 
    * all the content items in the page, this view helper is called on each 
    * content item so we don't want to repass in the data
    * 
    * @return void
    */
    private function resetParams() 
    {
        $this->html = '';
        $this->id = NULL;
        $this->base_styles = array();
    }
    
    /**
    * Set the base data for the current content item, clears any params set 
    * when the view helper was called previously within the page view helper
    * 
    * @param integer $id Id of the current content item
    * @return Dlayer_View_ContentStyles
    */
    public function contentItem($id) 
    {
        $this->resetParams();
        
        $this->id = $id;

        return $this;
    }
    
    /**
    * Set the additional styles data array, this array contains all the 
    * additional defined styles for the current page. 
    * 
    * There is an index for each style type, these are then split and passed 
    * to the child content style view helpers, each section array contains 
    * all the relevant styles grouped by content item is
    * 
    * The addiotnal styles data array is passed in using this method for 
    * performance reasons. The view helper and as a result the child view 
    * helpers are called for each content item on the page if there is 
    * additional styling data. All the view helpers operate in the same array, 
    * database calls are not duplicated
    * 
    * @param array $additional_styles All the additional styles for the entire 
    * 								  content page
    * @return Dlayer_View_ContentStyles
    */
    public function setStyles(array $additional_styles)
    {
        $this->additional_styles = $additional_styles;

        if(array_key_exists('background_colors', 
        $this->additional_styles) == TRUE) {
            $this->view->contentStylesBackgroundColors()->setStyles(
            $this->additional_styles['background_colors']);
        }
        
        if(array_key_exists('margins', $this->additional_styles) == TRUE) {
			$this->view->contentStylesMargins()->setStyles(
			$this->additional_styles['margins']);
        }
        
        return $this;
    }
    
    /**
    * Render method, this is the base worker method for the view helper, it 
    * generates all the html by calling all the child view helpers
    * 
    * @return string The generated html
    */
    private function render() 
    {
    	$html = '';
    	
    	$html .= $this->view->contentStylesBackgroundColors()->contentItem(
    	$this->id);
    	
    	$html .= $this->view->contentStylesMargins()->contentItem($this->id);
    	
    	return $html;
    }
    
    /**
    * The view helpers can be output directly, no need to call and return the 
    * render method, we define the __toString method so that echo and print 
    * calls on the object return the html generated by the render method
    * 
    * @return string The html generated by the render method
    */
    public function __toString() 
    {
        return $this->render();
    }
}