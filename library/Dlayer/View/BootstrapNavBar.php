<?php
/**
* Generate the html for a bootstrap navbar, allows developer to define brand 
* name, navbar items atd dropdown navbar items
* 
* @author Dean Blackborough <dean@g3d-development.com>
* @copyright G3D Development Limited
*/
class Dlayer_View_BootstrapNavbar extends Zend_View_Helper_Abstract 
{
	/**
	* Override the hinting for the view property so that we can see the view
	* helpers that have been defined
	*
	* @var Dlayer_View_Codehinting
	*/
	public $view;

	private $brand;
	private $navbar_items;
	private $active_url;

	/**
	* Generates a simple boiotstrap navbar, brand name, nav bar items and 
	* drop down navbar items
	* 
	* @param string $brand Brand name, appears to let of navbar
	* @param array $navbar_items Array containing the navbar items, each item in 
	* 							 should be an array with url and name fields, 
	* 							 drop dowsn are defined by supplying a 
	* 							 multi-dimensional array
	* @param string $active_url The URL of the active item, not always the 
	* 							current URL
	* @return Dlayer_View_BootstrapNavbar
	*/
	public function bootstrapNavbar($brand, array $navbar_items, $active_url='') 
	{
		$this->resetParams();

		$this->brand = $brand;
		$this->navbar_items = $navbar_items;
		$this->active_url = $active_url;

		return $this;
	}

	/**
	* Reset any internal params, we need to reset the internal params in 
	* case the helper is called multiple times withing the same view
	* 
	* @return void
	*/
	public function resetParams() 
	{
		$this->brand = '';
		$this->navbar_items = array();
		$this->active_url = '';
	}
	
	/**
	* Brand and toggle html
	* 
	* @return string 
	*/
	private function brandAndToggle() 
	{
		
	}

	/**
	* Generate the html for the complete navbar, result is returned to 
	* __toString when the user prints/echos the view helper
	* 
	* @return string 
	*/
	private function render() 
	{
		$html = '<nav class="navbar navbar-default" role="navigation">' . 
		PHP_EOL;
		
		$html .= $this->brandAndToggle();
		
		$html .= '</nav>' . PHP_EOL;
		
		return $html;
	}

	/**
	* The view helpers can be output directly, no need to call and return the 
	* render method, we define the __toString method so that echo and print 
	* calls on the object return the html generated by the render method
	* 
	* @return string Generated html
	*/
	public function __toString() 
	{
		return $this->render();
	}

}
